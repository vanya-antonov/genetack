#!/usr/bin/perl --

use strict;
use warnings;

# $Id$

###
# Ivan Antonov (antonov1986@gmail.com)
#

$| = 1; # Turn off buffering

use FindBin;
use lib "$FindBin::Bin/lib";

use Data::Dumper;
use Getopt::Long;
use File::Spec;

use GeneTack::FSMark;
use GeneTack::GeneMark::Mod;

###
# CONSTANTS
my $FS_PROB             = 0.0006;
my $TRANS_START_EXCEPT  = 0.0001;     # Based of optimization done on April 21, 2009
my $SILENT              = 0;
my $COD_MODEL           = 'COD1';

###
# Parse input data
GetOptions(
	'trans_start_except=f' => \$TRANS_START_EXCEPT,
	'fs_prob=f'            => \$FS_PROB,
	'silent'               => \$SILENT,
	'cod_model=s'          => \$COD_MODEL,
) || die usage();

die usage() if @ARGV!=3;

###
run(
	mod_fn       => $ARGV[0],
	hmm_def_tmpl => $ARGV[1],
	out_fn       => $ARGV[2],
	fs_prob      => $FS_PROB,
	tse          => $TRANS_START_EXCEPT,
	silent       => $SILENT,
	cod_model    => $COD_MODEL,
);
###

###
# SUBROUTINES
sub run
{
	my %opts = @_;
	
	my $mod = GeneTack::GeneMark::Mod->new( $opts{mod_fn} );
	GeneTack::FSMark::create_hmm_def_file($opts{hmm_def_tmpl}, $mod, $opts{out_fn},
		fs_prob   => $opts{fs_prob},
		tse       => $opts{tse},
		cod_model => $opts{cod_model},
	);
}

sub usage
{
	my $script = File::Spec->splitpath($0);
	return"
DESCRIPTION:
    Converts .mod file generated by GeneMark to .hmm_def file for GeneTack

USAGE:
     $script   [OPTIONS]   <IN.mod>   <TEMPLATE.hmm_def>   <OUT.hmm_def>

OPTIONS:
    --cod_model     [COD1|COD2]  --  which coding model to use (COD1 or COD2). Default if $COD_MODEL
    --fs_prob             <NUM>  --  probability of a frame shift. Default value is $FS_PROB
    --trans_start_except  <NUM>  --  exception transition probability to start codon. Default value is $TRANS_START_EXCEPT
    --silent                    

";
}

